# init the binary number and string
bin <- 0
bin_strg <- NULL
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j])
bin_strg <- c(bin_strg, d[i,j])
}
# assign bin to the right column
d[i,nd+1] <- as.numeric(bin)
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
warnings()
# import data set
d <- read.csv("uncert_repres_review1.csv", h = T)
# binary column as factors
for (i in 2:(ncol(d)-3)) {
d[,i] <- as.factor(d[,i])
}
# column were dichotomies assessment starts
st <- 6
# and ends
nd <- st+5
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- 0
bin_strg <- NULL
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j])
bin_strg <- c(bin_strg, d[i,j])
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# import data set
d <- read.csv("uncert_repres_review1.csv", h = T)
# binary column as factors
for (i in 2:(ncol(d)-3)) {
d[,i] <- as.factor(d[,i])
}
# column were dichotomies assessment starts
st <- 6
# and ends
nd <- st+5
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- 0
bin_strg <- NULL
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg <- c(bin_strg, d[i,j])
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- NULL
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg <- c(bin_strg, d[i,j])
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
zz <- c(0,0,0,0,0,0)
bin2dec(zz)
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- NULL
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg <- c(bin_strg, d[i,j])
bin_strg
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
bin_strg
c(bin_strg, 0)
i=2
j=st
bin_strg <- NULL
bin_strg <- c(bin_strg, d[i,j])
bin_strg
d[i,j]
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- NULL
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg <- c(bin_strg, d[i,j])
bin_strg
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[st-5] <- d[i,j]
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[j-5] <- d[i,j]
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
nd-st+1
j-5
d[i,j]
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[j-5] <- d[i,j]
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[j-5] <- d[i,j]
}
bin_strg
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin_strg[j-5] <- d[i,j]
bin <- paste(bin, d[i,j], sep = "")
}
bin_strg
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
bin_strg
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin_strg[j-5] <- d[i,j]
(bin <- paste(bin, d[i,j], sep = ""))
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin_strg[j-5] <- d[i,j]
bin <- paste(bin, d[i,j], sep = "")
print(bin_strg)
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
print(c(i,j))
print(d[i,j])
bin_strg[j-5] <- d[i,j]
print(bin_strg[j-5])
print(bin_strg)
bin <- paste(bin, d[i,j], sep = "")
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(0, nd-st+1)
# browse binary columns
for (j in st:nd) {
print(c(i,j))
print(d[i,j])
bin_strg[j-5] <- as.numeric(d[i,j])
print(bin_strg[j-5])
print(bin_strg)
bin <- paste(bin, d[i,j], sep = "")
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- d[i,st]
# browse binary columns
for (j in st:nd) {
bin_strg <- c(bin_strg, d[i,j])
print(bin_strg[j-5])
print(bin_strg)
bin <- paste(bin, d[i,j], sep = "")
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# import data set
d <- read.csv("uncert_repres_review1.csv", h = T)
# binary column as factors
for (i in 2:(ncol(d)-3)) {
d[,i] <- as.factor(d[,i])
}
# column were dichotomies assessment starts
st <- 6
# and ends
nd <- st+5
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- d[i,st]
# browse binary columns
for (j in st:nd) {
bin_strg <- c(bin_strg, d[i,j])
print(d[i,j])
print(bin_strg)
bin <- paste(bin, d[i,j], sep = "")
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- NULL
# browse binary columns
for (j in st:nd) {
bin_strg <- c(bin_strg, d[i,j])
print(d[i,j])
print(bin_strg)
bin <- paste(bin, d[i,j], sep = "")
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
(bin_strg <- NULL)
c(bin_strg, d[i,j])
d[i,j]
d[i,j]
bin_strg <- NULL
c(bin_strg, 0)
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
(bin_strg <- NULL)
# browse binary columns
for (j in st:nd) {
print(d[i,j])
bin_strg <- c(bin_strg, d[i,j])
print(bin_strg)
bin <- paste(bin, d[i,j], sep = "")
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
(bin_strg <- NULL)
# browse binary columns
for (j in st:nd) {
print(d[i,j])
bin <- paste(bin, d[i,j], sep = "")
#bin_strg <- c(bin_strg, d[i,j])
bin_strg <- paste(bin_strg, sep = ",")
print(bin_strg)
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
nd-st+1
nd-st
# import data set
d <- read.csv("uncert_repres_review1.csv", h = T)
# column were dichotomies assessment starts
st <- 6
# and ends
nd <- st+5
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(NA, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[j-(nd-st)] <- d[i,j]
print(bin_strg)
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# Clear list
rm(list=ls())
# set work directory
setwd("Documents/uncertainty_workshop/")
getwd()
# import data set
d <- read.csv("uncert_repres_review1.csv", h = T)
# binary column as factors
for (i in 2:(ncol(d)-3)) {
d[,i] <- as.factor(d[,i])
}
# column were dichotomies assessment starts
st <- 6
# and ends
nd <- st+5
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(NA, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[j-(nd-st)] <- d[i,j]
print(bin_strg)
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# import data set
d <- read.csv("uncert_repres_review1.csv", h = T)
# column were dichotomies assessment starts
st <- 6
# and ends
nd <- st+5
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(NA, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[j-(nd-st)] <- d[i,j]
print(bin_strg)
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
bin2dec <- function(x) {
# init sum
binsum <- 0
for (i in 1:length(x)) {
binsum <- binsum + 2^(i-1) * x[i]
}
return(binsum)
}
# import data set
d <- read.csv("uncert_repres_review1.csv", h = T)
# binary column as factors
for (i in 2:(ncol(d)-3)) {
d[,i] <- as.factor(d[,i])
}
# column were dichotomies assessment starts
st <- 6
# and ends
nd <- st+5
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(NA, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[j-(nd-st)] <- d[i,j]
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# import data set
d <- read.csv("uncert_repres_review1.csv", h = T)
# column were dichotomies assessment starts
st <- 6
# and ends
nd <- st+5
# browse lines
for (i in 1:nrow(d)) {
# init the binary number and string
bin <- NULL
bin_strg <- rep(NA, nd-st+1)
# browse binary columns
for (j in st:nd) {
bin <- paste(bin, d[i,j], sep = "")
bin_strg[j-(nd-st)] <- d[i,j]
}
# assign bin to the right column
d[i,nd+1] <- bin
# convert to decimal using personal function
d[i,nd+2] <- bin2dec(bin_strg)
}
# export the new table
write.csv(d, file = "uncert_repres_review1_Rtreated.csv")
# export the new table
write.csv(d, file = "uncert_repres_review1_Rtreated.csv", na = "")
getwd()
# set work directory
setwd("/home/adrian/Documents/GitKraken/Workshop task")
getwd()
